name: Crosslink Tests

on:
  merge_group:
    types: [checks_requested]

  pull_request:
    # Run only on PRs that modify Rust code or dependencies.
    paths:
      - "**/*.rs"
      - "**/*.txt"
      - "**/*.snap"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - ".cargo/config.toml"
      - "**/clippy.toml"
      - "docker/**"
      - ".dockerignore"
      - ".github/workflows/ci-tests.yml"
      - ".github/workflows/sub-ci-unit-tests-docker.yml"
      - ".github/workflows/sub-ci-integration-tests-gcp.yml"
      - ".github/workflows/sub-deploy-integration-tests-gcp.yml"
      - ".github/workflows/sub-find-cached-disks.yml"
      - ".github/workflows/sub-build-docker-image.yml"
      - ".github/workflows/shieldedlabs-tests.yml"

# See: https://github.com/ShieldedLabs/zebra-crosslink/settings/variables/actions
env:
  RUST_LOG: ${{ vars.RUST_LOG }} # defaults to 'info'
  RUST_BACKTRACE: ${{ vars.RUST_BACKTRACE }} # defaults to 1
  RUST_LIB_BACKTRACE: ${{ vars.RUST_LIB_BACKTRACE }} # defaults to 0
  COLORBT_SHOW_HIDDEN: ${{ vars.COLORBT_SHOW_HIDDEN }} # disables frame filtering, defaults to 0
  CARGO_INCREMENTAL: ${{ vars.CARGO_INCREMENTAL }} # defaults to 0

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Test (Crosslink)
    steps:
    - uses: actions/checkout@v4
    - run: rustup toolchain install stable --profile minimal
    - uses: Swatinem/rust-cache@v2
    - name: Static Analysis
      run: cargo fmt --check
    - name: Run Crosslink Tests
      run: cargo test --test crosslink*
    - name: Ensure docs generate
      run: cargo doc
    - name: Regression tests # mostly
      if: github.ref == 'refs/heads/main'
      run: cargo test
